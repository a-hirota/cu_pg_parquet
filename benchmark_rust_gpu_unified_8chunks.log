/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/dispatcher.py:605: NumbaPerformanceWarning: [1mGrid size 1 will likely result in GPU under-utilization due to low occupancy.[0m
  warn(NumbaPerformanceWarning(msg))
/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/dispatcher.py:605: NumbaPerformanceWarning: [1mGrid size 1 will likely result in GPU under-utilization due to low occupancy.[0m
  warn(NumbaPerformanceWarning(msg))
/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/dispatcher.py:605: NumbaPerformanceWarning: [1mGrid size 1 will likely result in GPU under-utilization due to low occupancy.[0m
  warn(NumbaPerformanceWarning(msg))
/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/dispatcher.py:605: NumbaPerformanceWarning: [1mGrid size 1 will likely result in GPU under-utilization due to low occupancy.[0m
  warn(NumbaPerformanceWarning(msg))
/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/dispatcher.py:605: NumbaPerformanceWarning: [1mGrid size 1 will likely result in GPU under-utilization due to low occupancy.[0m
  warn(NumbaPerformanceWarning(msg))
/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/dispatcher.py:605: NumbaPerformanceWarning: [1mGrid size 64 will likely result in GPU under-utilization due to low occupancy.[0m
  warn(NumbaPerformanceWarning(msg))
/home/ubuntu/gpupgparser/src/build_cudf_from_buf.py:387: UserWarning: Âõ∫ÂÆöÈï∑Âàó lo_extendedprice „ÅÆ„Çº„É≠„Ç≥„Éî„ÉºÂá¶ÁêÜ„Å´Â§±Êïó: std::bad_alloc: out_of_memory: CUDA error (failed to allocate 237023488 bytes) at: /home/ubuntu/miniconda3/envs/cudf_dev/include/rmm/mr/device/cuda_memory_resource.hpp
  warnings.warn(f"Âõ∫ÂÆöÈï∑Âàó {col.name} „ÅÆ„Çº„É≠„Ç≥„Éî„ÉºÂá¶ÁêÜ„Å´Â§±Êïó: {e}")
/home/ubuntu/gpupgparser/src/build_cudf_from_buf.py:387: UserWarning: Âõ∫ÂÆöÈï∑Âàó lo_ordertotalprice „ÅÆ„Çº„É≠„Ç≥„Éî„ÉºÂá¶ÁêÜ„Å´Â§±Êïó: std::bad_alloc: out_of_memory: CUDA error (failed to allocate 237023488 bytes) at: /home/ubuntu/miniconda3/envs/cudf_dev/include/rmm/mr/device/cuda_memory_resource.hpp
  warnings.warn(f"Âõ∫ÂÆöÈï∑Âàó {col.name} „ÅÆ„Çº„É≠„Ç≥„Éî„ÉºÂá¶ÁêÜ„Å´Â§±Êïó: {e}")
/home/ubuntu/gpupgparser/src/build_cudf_from_buf.py:175: UserWarning: Âàó lo_ordertotalprice „ÅÆÂá¶ÁêÜ„Åß„Ç®„É©„Éº: std::bad_alloc: out_of_memory: CUDA error (failed to allocate 59255888 bytes) at: /home/ubuntu/miniconda3/envs/cudf_dev/include/rmm/mr/device/cuda_memory_resource.hpp
  warnings.warn(f"Âàó {col.name} „ÅÆÂá¶ÁêÜ„Åß„Ç®„É©„Éº: {e}")
Traceback (most recent call last):
  File "/home/ubuntu/gpupgparser/src/build_cudf_from_buf.py", line 360, in _create_fixed_series_zero_copy
    column_buffer = self._extract_column_zero_copy(
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/build_cudf_from_buf.py", line 401, in _extract_column_zero_copy
    column_buffer = cuda.device_array(rows * col_size, dtype=np.uint8)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/cudadrv/devices.py", line 232, in _require_cuda_context
    return fn(*args, **kws)
           ^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/api.py", line 144, in device_array
    return devicearray.DeviceNDArray(shape=shape, strides=strides, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/cudadrv/devicearray.py", line 103, in __init__
    gpu_data = devices.get_context().memalloc(self.alloc_size)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/cudadrv/driver.py", line 1372, in memalloc
    return self.memory_manager.memalloc(bytesize)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/rmm/allocators/numba.py", line 73, in memalloc
    buf = pylibrmm.DeviceBuffer(size=size)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "device_buffer.pyx", line 102, in rmm.pylibrmm.device_buffer.DeviceBuffer.__cinit__
MemoryError: std::bad_alloc: out_of_memory: CUDA error (failed to allocate 237023488 bytes) at: /home/ubuntu/miniconda3/envs/cudf_dev/include/rmm/mr/device/cuda_memory_resource.hpp

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ubuntu/gpupgparser/src/build_cudf_from_buf.py", line 168, in create_cudf_from_gpu_buffers_zero_copy
    series = self._create_fixed_series_zero_copy(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/build_cudf_from_buf.py", line 388, in _create_fixed_series_zero_copy
    return cudf.Series([None] * rows)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/utils/performance_tracking.py", line 51, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/series.py", line 683, in __init__
    column = as_column(
             ^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/column/column.py", line 3005, in as_column
    return as_column(arbitrary, nan_as_null=nan_as_null, dtype=dtype)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/column/column.py", line 2597, in as_column
    col = col.astype(dtype)
          ^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/column/column.py", line 1638, in astype
    result = self.as_string_column()
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/column/numerical.py", line 358, in as_string_column
    conv_func(self.to_pylibcudf(mode="read"))
  File "convert_integers.pyx", line 54, in pylibcudf.strings.convert.convert_integers.from_integers
  File "convert_integers.pyx", line 75, in pylibcudf.strings.convert.convert_integers.from_integers
MemoryError: std::bad_alloc: out_of_memory: CUDA error (failed to allocate 59255888 bytes) at: /home/ubuntu/miniconda3/envs/cudf_dev/include/rmm/mr/device/cuda_memory_resource.hpp

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ubuntu/gpupgparser/benchmark/benchmark_rust_gpu_unified.py", line 147, in process_chunk_unified
    cudf_df, detailed_timing = postgresql_to_cudf_parquet(
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/main_postgres_to_parquet.py", line 560, in postgresql_to_cudf_parquet
    return processor.process_postgresql_to_parquet(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/main_postgres_to_parquet.py", line 420, in process_postgresql_to_parquet
    cudf_df, decode_timing = self.decode_and_export(
                             ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/main_postgres_to_parquet.py", line 357, in decode_and_export
    cudf_df = self.cudf_processor.create_cudf_from_gpu_buffers_zero_copy(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/build_cudf_from_buf.py", line 177, in create_cudf_from_gpu_buffers_zero_copy
    cudf_series_dict[col.name] = cudf.Series([None] * rows)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/utils/performance_tracking.py", line 51, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/series.py", line 683, in __init__
    column = as_column(
             ^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/column/column.py", line 3005, in as_column
    return as_column(arbitrary, nan_as_null=nan_as_null, dtype=dtype)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/column/column.py", line 2597, in as_column
    col = col.astype(dtype)
          ^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/column/column.py", line 1638, in astype
    result = self.as_string_column()
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/column/numerical.py", line 358, in as_string_column
    conv_func(self.to_pylibcudf(mode="read"))
  File "convert_integers.pyx", line 54, in pylibcudf.strings.convert.convert_integers.from_integers
  File "convert_integers.pyx", line 75, in pylibcudf.strings.convert.convert_integers.from_integers
MemoryError: std::bad_alloc: out_of_memory: CUDA error (failed to allocate 59255888 bytes) at: /home/ubuntu/miniconda3/envs/cudf_dev/include/rmm/mr/device/cuda_memory_resource.hpp
Traceback (most recent call last):
  File "/home/ubuntu/gpupgparser/src/build_cudf_from_buf.py", line 360, in _create_fixed_series_zero_copy
    column_buffer = self._extract_column_zero_copy(
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/build_cudf_from_buf.py", line 401, in _extract_column_zero_copy
    column_buffer = cuda.device_array(rows * col_size, dtype=np.uint8)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/cudadrv/devices.py", line 232, in _require_cuda_context
    return fn(*args, **kws)
           ^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/api.py", line 144, in device_array
    return devicearray.DeviceNDArray(shape=shape, strides=strides, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/cudadrv/devicearray.py", line 103, in __init__
    gpu_data = devices.get_context().memalloc(self.alloc_size)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/cudadrv/driver.py", line 1372, in memalloc
    return self.memory_manager.memalloc(bytesize)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/rmm/allocators/numba.py", line 73, in memalloc
    buf = pylibrmm.DeviceBuffer(size=size)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "device_buffer.pyx", line 102, in rmm.pylibrmm.device_buffer.DeviceBuffer.__cinit__
MemoryError: std::bad_alloc: out_of_memory: CUDA error (failed to allocate 237023488 bytes) at: /home/ubuntu/miniconda3/envs/cudf_dev/include/rmm/mr/device/cuda_memory_resource.hpp

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ubuntu/gpupgparser/src/build_cudf_from_buf.py", line 168, in create_cudf_from_gpu_buffers_zero_copy
    series = self._create_fixed_series_zero_copy(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/build_cudf_from_buf.py", line 388, in _create_fixed_series_zero_copy
    return cudf.Series([None] * rows)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/utils/performance_tracking.py", line 51, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/series.py", line 683, in __init__
    column = as_column(
             ^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/column/column.py", line 3005, in as_column
    return as_column(arbitrary, nan_as_null=nan_as_null, dtype=dtype)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/column/column.py", line 2597, in as_column
    col = col.astype(dtype)
          ^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/column/column.py", line 1638, in astype
    result = self.as_string_column()
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/column/numerical.py", line 358, in as_string_column
    conv_func(self.to_pylibcudf(mode="read"))
  File "convert_integers.pyx", line 54, in pylibcudf.strings.convert.convert_integers.from_integers
  File "convert_integers.pyx", line 75, in pylibcudf.strings.convert.convert_integers.from_integers
MemoryError: std::bad_alloc: out_of_memory: CUDA error (failed to allocate 59255888 bytes) at: /home/ubuntu/miniconda3/envs/cudf_dev/include/rmm/mr/device/cuda_memory_resource.hpp

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ubuntu/gpupgparser/benchmark/benchmark_rust_gpu_unified.py", line 257, in main
    gpu_time, _, rows, timing = process_chunk_unified(chunk_info, columns)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/benchmark/benchmark_rust_gpu_unified.py", line 147, in process_chunk_unified
    cudf_df, detailed_timing = postgresql_to_cudf_parquet(
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/main_postgres_to_parquet.py", line 560, in postgresql_to_cudf_parquet
    return processor.process_postgresql_to_parquet(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/main_postgres_to_parquet.py", line 420, in process_postgresql_to_parquet
    cudf_df, decode_timing = self.decode_and_export(
                             ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/main_postgres_to_parquet.py", line 357, in decode_and_export
    cudf_df = self.cudf_processor.create_cudf_from_gpu_buffers_zero_copy(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/build_cudf_from_buf.py", line 177, in create_cudf_from_gpu_buffers_zero_copy
    cudf_series_dict[col.name] = cudf.Series([None] * rows)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/utils/performance_tracking.py", line 51, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/series.py", line 683, in __init__
    column = as_column(
             ^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/column/column.py", line 3005, in as_column
    return as_column(arbitrary, nan_as_null=nan_as_null, dtype=dtype)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/column/column.py", line 2597, in as_column
    col = col.astype(dtype)
          ^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/column/column.py", line 1638, in astype
    result = self.as_string_column()
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/column/numerical.py", line 358, in as_string_column
    conv_func(self.to_pylibcudf(mode="read"))
  File "convert_integers.pyx", line 54, in pylibcudf.strings.convert.convert_integers.from_integers
  File "convert_integers.pyx", line 75, in pylibcudf.strings.convert.convert_integers.from_integers
MemoryError: std::bad_alloc: out_of_memory: CUDA error (failed to allocate 59255888 bytes) at: /home/ubuntu/miniconda3/envs/cudf_dev/include/rmm/mr/device/cuda_memory_resource.hpp
=== PostgreSQL ‚Üí Rust ‚Üí GPU Áµ±‰∏ÄÂá¶ÁêÜÁâà ===
„ÉÅ„É£„É≥„ÇØÊï∞: 8
ÂêÑ„ÉÅ„É£„É≥„ÇØ„Çµ„Ç§„Ç∫: Á¥Ñ6.6 GB
Âá∫Âäõ„Éá„Ç£„É¨„ÇØ„Éà„É™: /dev/shm

ÊîπÂñÑÂÜÖÂÆπ:
  - cuda.to_device()„ÅßÁõ¥Êé•GPUËª¢ÈÄÅ
  - postgresql_to_cudf_parquet()„Åß‰∏ÄÊã¨Âá¶ÁêÜ
  - cuDF DataFrame‰ΩúÊàê„ÅÆCPU„Ç∑„É≥„Ç∞„É´„Çπ„É¨„ÉÉ„ÉâÂïèÈ°å„ÇíËß£Ê±∫
RMMÊó¢„Å´ÂàùÊúüÂåñÊ∏à„Åø

‚úÖ CUDA context OK

[Rust] „ÉÅ„É£„É≥„ÇØ 1/8 Ëª¢ÈÄÅÈñãÂßã
[Rust] „ÉÅ„É£„É≥„ÇØ 1 Ëª¢ÈÄÅÂÆå‰∫Ü: 6.59 GB, 4.87Áßí (1.35 GB/Áßí)
„Ç´„É©„É†Êï∞: 17

[GPU] „ÉÅ„É£„É≥„ÇØ 1 Áµ±‰∏ÄÂá¶ÁêÜÈñãÂßã
  „Éï„Ç°„Ç§„É´Ë™≠„ÅøËæº„Åø: 3.65Áßí (1.81 GB/Áßí)
  GPUËª¢ÈÄÅ: 0.54Áßí (12.21 GB/Áßí)
=== GPU‰∏¶Âàó„Éë„Éº„ÇπÈñãÂßã ===
‚úÖ Ultra Fast GPU‰∏¶Âàó„Éë„Éº„Çµ„Éº‰ΩøÁî®Ôºà8.94ÂÄçÈ´òÈÄüÂåñÈÅîÊàêÔºâ
GPU„Éë„Éº„ÇπÂÆå‰∫Ü: 14813968 Ë°å (3.0110Áßí)
=== ÊñáÂ≠óÂàóÊúÄÈÅ©Âåñ„Éá„Ç≥„Éº„ÉâÈñãÂßã ===
ÊñáÂ≠óÂàóÂàó lo_orderpriority: Áõ¥Êé•„Ç≥„Éî„ÉºÊúÄÈÅ©Âåñ„Ç´„Éº„Éç„É´ÂÆüË°å
‚úÖ ÊñáÂ≠óÂàóÂàó lo_orderpriority: ÊúÄÈÅ©Âåñ„Éê„ÉÉ„Éï„Ç°‰ΩúÊàêÂÆå‰∫Ü (222209520 bytes)
ÊñáÂ≠óÂàóÂàó lo_shippriority: Áõ¥Êé•„Ç≥„Éî„ÉºÊúÄÈÅ©Âåñ„Ç´„Éº„Éç„É´ÂÆüË°å
‚úÖ ÊñáÂ≠óÂàóÂàó lo_shippriority: ÊúÄÈÅ©Âåñ„Éê„ÉÉ„Éï„Ç°‰ΩúÊàêÂÆå‰∫Ü (14813968 bytes)
ÊñáÂ≠óÂàóÂàó lo_commit_date: Áõ¥Êé•„Ç≥„Éî„ÉºÊúÄÈÅ©Âåñ„Ç´„Éº„Éç„É´ÂÆüË°å
‚úÖ ÊñáÂ≠óÂàóÂàó lo_commit_date: ÊúÄÈÅ©Âåñ„Éê„ÉÉ„Éï„Ç°‰ΩúÊàêÂÆå‰∫Ü (118511744 bytes)
ÊñáÂ≠óÂàóÂàó lo_shipmode: Áõ¥Êé•„Ç≥„Éî„ÉºÊúÄÈÅ©Âåñ„Ç´„Éº„Éç„É´ÂÆüË°å
‚úÖ ÊñáÂ≠óÂàóÂàó lo_shipmode: ÊúÄÈÅ©Âåñ„Éê„ÉÉ„Éï„Ç°‰ΩúÊàêÂÆå‰∫Ü (148139680 bytes)
Áµ±Âêà„Ç´„Éº„Éç„É´ÂÆüË°åÔºàÂõ∫ÂÆöÈï∑„Éá„Éº„Çø„ÅÆ„ÅøÔºâ: 57868 blocks √ó 256 threads
‚ùå GPUÂá¶ÁêÜ„Ç®„É©„Éº: std::bad_alloc: out_of_memory: CUDA error (failed to allocate 59255888 bytes) at: /home/ubuntu/miniconda3/envs/cudf_dev/include/rmm/mr/device/cuda_memory_resource.hpp

‚ùå „Ç®„É©„Éº: std::bad_alloc: out_of_memory: CUDA error (failed to allocate 59255888 bytes) at: /home/ubuntu/miniconda3/envs/cudf_dev/include/rmm/mr/device/cuda_memory_resource.hpp
Traceback (most recent call last):
  File "/home/ubuntu/gpupgparser/src/build_cudf_from_buf.py", line 360, in _create_fixed_series_zero_copy
    column_buffer = self._extract_column_zero_copy(
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/build_cudf_from_buf.py", line 401, in _extract_column_zero_copy
    column_buffer = cuda.device_array(rows * col_size, dtype=np.uint8)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/cudadrv/devices.py", line 232, in _require_cuda_context
    return fn(*args, **kws)
           ^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/api.py", line 144, in device_array
    return devicearray.DeviceNDArray(shape=shape, strides=strides, dtype=dtype,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/cudadrv/devicearray.py", line 103, in __init__
    gpu_data = devices.get_context().memalloc(self.alloc_size)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/cudadrv/driver.py", line 1372, in memalloc
    return self.memory_manager.memalloc(bytesize)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/rmm/allocators/numba.py", line 73, in memalloc
    buf = pylibrmm.DeviceBuffer(size=size)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "device_buffer.pyx", line 102, in rmm.pylibrmm.device_buffer.DeviceBuffer.__cinit__
MemoryError: std::bad_alloc: out_of_memory: CUDA error (failed to allocate 237023488 bytes) at: /home/ubuntu/miniconda3/envs/cudf_dev/include/rmm/mr/device/cuda_memory_resource.hpp

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ubuntu/gpupgparser/src/build_cudf_from_buf.py", line 168, in create_cudf_from_gpu_buffers_zero_copy
    series = self._create_fixed_series_zero_copy(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/build_cudf_from_buf.py", line 388, in _create_fixed_series_zero_copy
    return cudf.Series([None] * rows)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/utils/performance_tracking.py", line 51, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/series.py", line 683, in __init__
    column = as_column(
             ^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/column/column.py", line 3005, in as_column
    return as_column(arbitrary, nan_as_null=nan_as_null, dtype=dtype)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/column/column.py", line 2597, in as_column
    col = col.astype(dtype)
          ^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/column/column.py", line 1638, in astype
    result = self.as_string_column()
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/column/numerical.py", line 358, in as_string_column
    conv_func(self.to_pylibcudf(mode="read"))
  File "convert_integers.pyx", line 54, in pylibcudf.strings.convert.convert_integers.from_integers
  File "convert_integers.pyx", line 75, in pylibcudf.strings.convert.convert_integers.from_integers
MemoryError: std::bad_alloc: out_of_memory: CUDA error (failed to allocate 59255888 bytes) at: /home/ubuntu/miniconda3/envs/cudf_dev/include/rmm/mr/device/cuda_memory_resource.hpp

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ubuntu/gpupgparser/benchmark/benchmark_rust_gpu_unified.py", line 292, in <module>
    main()
  File "/home/ubuntu/gpupgparser/benchmark/benchmark_rust_gpu_unified.py", line 257, in main
    gpu_time, _, rows, timing = process_chunk_unified(chunk_info, columns)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/benchmark/benchmark_rust_gpu_unified.py", line 147, in process_chunk_unified
    cudf_df, detailed_timing = postgresql_to_cudf_parquet(
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/main_postgres_to_parquet.py", line 560, in postgresql_to_cudf_parquet
    return processor.process_postgresql_to_parquet(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/main_postgres_to_parquet.py", line 420, in process_postgresql_to_parquet
    cudf_df, decode_timing = self.decode_and_export(
                             ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/main_postgres_to_parquet.py", line 357, in decode_and_export
    cudf_df = self.cudf_processor.create_cudf_from_gpu_buffers_zero_copy(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/build_cudf_from_buf.py", line 177, in create_cudf_from_gpu_buffers_zero_copy
    cudf_series_dict[col.name] = cudf.Series([None] * rows)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/utils/performance_tracking.py", line 51, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/series.py", line 683, in __init__
    column = as_column(
             ^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/column/column.py", line 3005, in as_column
    return as_column(arbitrary, nan_as_null=nan_as_null, dtype=dtype)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/column/column.py", line 2597, in as_column
    col = col.astype(dtype)
          ^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/column/column.py", line 1638, in astype
    result = self.as_string_column()
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/cudf/core/column/numerical.py", line 358, in as_string_column
    conv_func(self.to_pylibcudf(mode="read"))
  File "convert_integers.pyx", line 54, in pylibcudf.strings.convert.convert_integers.from_integers
  File "convert_integers.pyx", line 75, in pylibcudf.strings.convert.convert_integers.from_integers
MemoryError: std::bad_alloc: out_of_memory: CUDA error (failed to allocate 59255888 bytes) at: /home/ubuntu/miniconda3/envs/cudf_dev/include/rmm/mr/device/cuda_memory_resource.hpp
