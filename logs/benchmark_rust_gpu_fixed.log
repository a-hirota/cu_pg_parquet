/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/dispatcher.py:605: NumbaPerformanceWarning: [1mGrid size 1 will likely result in GPU under-utilization due to low occupancy.[0m
  warn(NumbaPerformanceWarning(msg))
Traceback (most recent call last):
  File "/home/ubuntu/gpupgparser/benchmark/benchmark_rust_gpu_fixed.py", line 155, in process_chunk_on_gpu
    df, metrics = postgresql_to_cudf_parquet(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/main_postgres_to_parquet.py", line 560, in postgresql_to_cudf_parquet
    return processor.process_postgresql_to_parquet(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/main_postgres_to_parquet.py", line 405, in process_postgresql_to_parquet
    field_offsets_dev, field_lengths_dev = parse_binary_chunk_gpu_ultra_fast_v2(
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/cuda_kernels/postgres_binary_parser.py", line 415, in parse_binary_chunk_gpu_ultra_fast_v2
    return parse_binary_chunk_gpu_ultra_fast_v2_lite(raw_dev, columns, header_size, debug)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/cuda_kernels/postgres_binary_parser.py", line 362, in parse_binary_chunk_gpu_ultra_fast_v2_lite
    parse_rows_and_fields_lite[grid_2d, threads_per_block](
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/dispatcher.py", line 608, in __call__
    return self.dispatcher.call(args, self.griddim, self.blockdim,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/dispatcher.py", line 752, in call
    kernel.launch(args, griddim, blockdim, stream, sharedmem)
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/dispatcher.py", line 394, in launch
    driver.launch_kernel(cufunc.handle,
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/cudadrv/driver.py", line 2563, in launch_kernel
    driver.cuLaunchKernel(cufunc_handle,
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/cudadrv/driver.py", line 327, in safe_cuda_api_call
    self._check_ctypes_error(fname, retcode)
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/cudadrv/driver.py", line 395, in _check_ctypes_error
    raise CudaAPIError(retcode, msg)
numba.cuda.cudadrv.driver.CudaAPIError: [2] Call to cuLaunchKernel results in CUDA_ERROR_OUT_OF_MEMORY
Traceback (most recent call last):
  File "/home/ubuntu/gpupgparser/benchmark/benchmark_rust_gpu_fixed.py", line 248, in main
    gpu_time, _ = process_chunk_on_gpu(chunk_info, columns)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/benchmark/benchmark_rust_gpu_fixed.py", line 155, in process_chunk_on_gpu
    df, metrics = postgresql_to_cudf_parquet(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/main_postgres_to_parquet.py", line 560, in postgresql_to_cudf_parquet
    return processor.process_postgresql_to_parquet(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/main_postgres_to_parquet.py", line 405, in process_postgresql_to_parquet
    field_offsets_dev, field_lengths_dev = parse_binary_chunk_gpu_ultra_fast_v2(
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/cuda_kernels/postgres_binary_parser.py", line 415, in parse_binary_chunk_gpu_ultra_fast_v2
    return parse_binary_chunk_gpu_ultra_fast_v2_lite(raw_dev, columns, header_size, debug)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/cuda_kernels/postgres_binary_parser.py", line 362, in parse_binary_chunk_gpu_ultra_fast_v2_lite
    parse_rows_and_fields_lite[grid_2d, threads_per_block](
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/dispatcher.py", line 608, in __call__
    return self.dispatcher.call(args, self.griddim, self.blockdim,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/dispatcher.py", line 752, in call
    kernel.launch(args, griddim, blockdim, stream, sharedmem)
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/dispatcher.py", line 394, in launch
    driver.launch_kernel(cufunc.handle,
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/cudadrv/driver.py", line 2563, in launch_kernel
    driver.cuLaunchKernel(cufunc_handle,
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/cudadrv/driver.py", line 327, in safe_cuda_api_call
    self._check_ctypes_error(fname, retcode)
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/cudadrv/driver.py", line 395, in _check_ctypes_error
    raise CudaAPIError(retcode, msg)
numba.cuda.cudadrv.driver.CudaAPIError: [2] Call to cuLaunchKernel results in CUDA_ERROR_OUT_OF_MEMORY
=== PostgreSQL → Rust → GPU 修正版 ===
チャンク数: 4
出力ディレクトリ: /dev/shm

修正内容:
  - チャンク全体をGPUに転送（分割なし）
  - RMMメモリプールを適切に設定
  - 正しい行境界での処理
RMM既に初期化済み

✅ CUDA context OK

============================================================
チャンク 1/4 を処理
============================================================

[1] Rustデータ転送
✓ Rust転送完了: 13.08 GB, 9.27秒
カラム数: 17

[2] GPU処理
  チャンクサイズ: 13.08 GB
  GPUメモリプール使用前: 0.00 GB / 0.00 GB
  GPU転送中... (13.08 GB)
  ✓ GPU転送完了: 12.42秒 (1.05 GB/秒)
  PostgreSQL → Parquet変換中...
=== GPU並列パース開始 ===
❌ GPU処理エラー: [2] Call to cuLaunchKernel results in CUDA_ERROR_OUT_OF_MEMORY
✓ チャンクファイル削除: /dev/shm/chunk_0.bin

❌ エラー: [2] Call to cuLaunchKernel results in CUDA_ERROR_OUT_OF_MEMORY
Traceback (most recent call last):
  File "/home/ubuntu/gpupgparser/benchmark/benchmark_rust_gpu_fixed.py", line 276, in <module>
    main()
  File "/home/ubuntu/gpupgparser/benchmark/benchmark_rust_gpu_fixed.py", line 248, in main
    gpu_time, _ = process_chunk_on_gpu(chunk_info, columns)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/benchmark/benchmark_rust_gpu_fixed.py", line 155, in process_chunk_on_gpu
    df, metrics = postgresql_to_cudf_parquet(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/main_postgres_to_parquet.py", line 560, in postgresql_to_cudf_parquet
    return processor.process_postgresql_to_parquet(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/main_postgres_to_parquet.py", line 405, in process_postgresql_to_parquet
    field_offsets_dev, field_lengths_dev = parse_binary_chunk_gpu_ultra_fast_v2(
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/cuda_kernels/postgres_binary_parser.py", line 415, in parse_binary_chunk_gpu_ultra_fast_v2
    return parse_binary_chunk_gpu_ultra_fast_v2_lite(raw_dev, columns, header_size, debug)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/gpupgparser/src/cuda_kernels/postgres_binary_parser.py", line 362, in parse_binary_chunk_gpu_ultra_fast_v2_lite
    parse_rows_and_fields_lite[grid_2d, threads_per_block](
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/dispatcher.py", line 608, in __call__
    return self.dispatcher.call(args, self.griddim, self.blockdim,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/dispatcher.py", line 752, in call
    kernel.launch(args, griddim, blockdim, stream, sharedmem)
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/dispatcher.py", line 394, in launch
    driver.launch_kernel(cufunc.handle,
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/cudadrv/driver.py", line 2563, in launch_kernel
    driver.cuLaunchKernel(cufunc_handle,
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/cudadrv/driver.py", line 327, in safe_cuda_api_call
    self._check_ctypes_error(fname, retcode)
  File "/home/ubuntu/miniconda3/envs/cudf_dev/lib/python3.12/site-packages/numba_cuda/numba/cuda/cudadrv/driver.py", line 395, in _check_ctypes_error
    raise CudaAPIError(retcode, msg)
numba.cuda.cudadrv.driver.CudaAPIError: [2] Call to cuLaunchKernel results in CUDA_ERROR_OUT_OF_MEMORY
